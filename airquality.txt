import pandas as pd
import seaborn as sns
import numpy as np

df = pd.read_csv(r'C:\Users\HP\Downloads\TE_IT_DSBDA_ASSIGNMENTS_SPPU-main\TE_IT_DSBDA_ASSIGNMENTS_SPPU-main\Group_B\B_2\airquality_data.csv',encoding = 'cp1252')
df

df.head()

df.info()

df.columns

df.dtypes

df['so2'] = df['so2'].astype('float32')
df['no2'] = df['no2'].astype('float32')
df['rspm'] = df['rspm'].astype('float32')
df['spm']  = df['spm'].astype('float32')
df['pm2_5'] = df['pm2_5'].astype('string')

df = df.drop_duplicates()

percent_missing = df.isnull().sum()*100/len(df)

percent_missing.sort_values(ascending=False)

df=df.drop(['stn_code', 'agency','sampling_date','location_monitoring_station','pm2_5'], axis = 1) 

subset_1 = df[['state','location']]
subset_1

subset_2 = df[['state','no2','type','so2']]
subset_2

concatenated_df = pd.concat([subset_1, subset_2], axis=1)
concatenated_df

def remove_outliers(column): 
    Q1=column.quantile(0.25)
    Q3=column.quantile(0.75)
    IQR  = Q3 - Q1
    threshold = 1.5*IQR
    outliers_mask = (column < Q1 - threshold) | (column > Q3 - threshold)
    return column[~outliers_mask]

col_name = ['so2', 'no2', 'rspm', 'spm']
for col in col_name:
  df[col] = remove_outliers(df[col])

from sklearn.preprocessing import LabelEncoder

col_label= ['state','location','type']
# Initialize LabelEncoder
encoder = LabelEncoder()
# Iterate over columns
for col in df.columns:
        # Fit and transform the column
        df[col] = encoder.fit_transform(df[col])
        
        
        
df.columns


#we can also use df.transpose()
df.T
